#include <iostream>
#include <limits>
#include <cmath>

const double w[4][600] = {{1,7,29,40,40,36,33,36,39,50,50,47,45,53,57,59,61,59,61,64,69,72,75,73,73,75,78,80,82,84,86,87,90,96,95,95,96,100,102,102,102,109,111,112,110,115,119,113,123,117,125,121,125,128,122,134,131,134,134,134,139,139,138,141,145,140,145,148,148,150,150,152,150,154,155,156,158,154,155,156,158,161,160,159,162,162,167,164,163,165,164,170,169,168,172,163,172,168,174,171,171,168,174,169,175,170,177,173,175,176,176,178,179,174,179,176,181,177,179,177,179,182,180,181,177,180,178,181,182,181,183,182,184,181,184,181,183,184,185,186,182,185,187,188,184,185,182,182,184,183,186,188,189,186,187,184,185,187,188,191,189,187,183,187,187,188,188,187,187,184,185,186,189,189,192,189,186,186,185,189,191,195,191,188,186,188,187,188,188,190,192,187,188,187,189,190,191,189,188,188,190,190,192,191,187,190,188,191,190,189,187,188,188,188,189,190,193,189,190,188,186,189,191,195,191,191,187,188,188,188,188,189,189,191,190,189,192,194,192,189,192,189,190,191,191,190,187,190,189,193,188,190,188,189},
                      {0,2,5,7,10,10,12,13,14,18,30,41,36,39,31,33,38,46,51,49,44,53,51,55,56,55,64,62,65,66,64,68,69,72,74,71,71,76,79,80,81,81,83,82,86,87,88,88,89,93,93,93,92,97,99,100,98,102,101,104,100,104,102,106,106,108,108,111,108,113,109,115,108,119,117,117,118,116,119,117,121,120,122,120,120,126,118,122,124,122,127,125,126,125,121,126,126,126,128,129,126,128,129,129,132,130,130,133,126,134,134,131,136,129,133,136,132,134,137,131,134,136,133,135,137,132,135,135,134,138,138,135,138,135,137,141,137,140,137,136,138,138,138,142,140,136,138,139,137,143,146,138,138,139,136,141,143,142,139,143,140,139,146,145,141,142,140,140,145,145,142,146,143,140,145,144,140,146,145,139,143,145,140,143,146,141,143,145,143,145,143,146,146,143,145,144,142,148,147,145,148,144,140,145,148,143,149,148,142,142,145,143,143,148,148,143,147,147,145,147,147,147,144,147,145,143,148,147,148,146,145,145,144,147,148,147,144,145,143,144,149,148,146,149,146,144,147,149,146,144,148,149,147,147,149,145,145,144,148,147,148,148,147,145,144,144,144,146,149,149,146,147,146,146,149,148,145,148,149,146,145,151,147,145,147,148,145,146,150,147,145,145,144,144,147,150,148,148,146,146,147,146,147,148,148,148,148,147,150,145,143,145,149,147,147,151,147,144,145,146,144},
                      {1,2,4,7,9,9,11,11,13,8,24,29,35,33,29,24,33,35,41,42,36,40,41,44,44,44,43,47,47,53,48,49,51,56,54,55,54,56,58,57,58,58,56,59,60,61,64,62,63,62,65,66,68,67,66,65,68,69,69,70,69,69,71,70,71,73,74,75,71,71,77,75,75,74,71,78,79,76,75,77,77,81,76,78,76,77,79,79,80,80,78,80,82,82,82,74,80,82,84,82,75,84,81,85,83,80,83,81,85,83,82,81,80,83,84,82,80,80,85,87,83,82,80,86,83,84,83,81,85,83,84,84,83,83,84,86,81,83,84,86,84,83,84,83,84,83,81,84,82,84,83,83,84,83,85,83,84,82,82,83,86,82,84,82,87,84,84,83,84,84,86,82,86,83,86,86,87,85,85,84,86,83,86,84,89,84,85,87,87,86,86,86,88,85,87,84,86,86,84,89,86,87,87,87,88,85,87,85,86,86,87,86,87,87,87,89,85,85,85,85,86,87,88,88,86,89,87,85,87,83,89,87,89,89,89,88,85,86,87,85,87,87,88,88,87,87,87,89,85,87,86,88,88,86,89,87,86,88,85,87,86,89,88,87,86,88,87,84,87,86,90,86,88,89,87,88,87,88,87,87,89,88,88,87,87,87,88,87,87,88,86,87,88,87,88,88,86,87,87,87,89,87,87,88,86,88,86,87,88,87,85,86,87,87,90,88,89,88,85,88,87,87,91,88,90,88,87,86,87,85,87,88,90,86,86,87,86,88,87,88,88,87,87,87,87,88,89,87,88,86,87,88,87,88,87,87,87,88,87,88,87,87,89,86,87,89,90,88,84,88,88,86,87,88,90,87,88,86,86,86,88,87,89,88,88,88,85,85,86,85,90,89,89,88,88,88,85,86,88,87,88,87,87,87,88,87,88,87,87,88,88,87,88,89,89,88,86,88,87,88,87,88,89,86,88,87,88,87,88,87,85,87,86,88,87,88,88,86,86,86,88,88,88,87,87,87,87,85,85,87,88,87,90,88,88,86,87,87,86,87,90,88,90,87,86,86,87,86,88,87,89,87,88,85,87,85,88,88,87,87,86,87,85,87,87,86,89,88,86,86,86,85,86,88,87,90},
                      {1,4,4,7,7,8,8,10,9,10,5,18,23,27,25,21,17,24,24,26,28,23,27,26,28,27,27,30,29,30,31,30,31,31,31,32,32,33,31,33,30,34,34,36,34,34,34,36,35,35,35,33,34,34,36,36,36,36,35,36,36,37,37,34,36,35,37,37,37,38,37,38,38,37,36,36,36,39,39,39,38,39,39,39,39,37,37,39,38,39,39,40,39,40,38,39,39,38,38,40,41,41,40,39,42,39,42,39,40,39,40,41,40,41,39,40,40,41,40,39,39,41,42,42,41,41,40,41,42,39,40,40,43,42,40,38,41,41,41,39,38,40,41,44,42,40,39,40,42,43,40,38,42,42,41,40,38,41,40,40,40,38,39,41,41,41,40,40,38,40,42,39,38,41,40,42,40,38,40,40,42,39,38,37,41,42,41,40,40,39,41,38,39,39,39,43,42,42,40,38,40,39,41,40,39,42,41,42,39,41,38,41,40,40,40,41,40,42,41,39,41,40,41,41,39,39,41,42,44,41,41,39,40,41,41,40,40,41,42,42,41,39,41,40,40,40,40,41,43,40,42,39,40,40,40,39,41,40,43,40,42,38,39,41,39,39,40,39,40,42,39,41,39,40,40,39,39,40,41,41,41,39,42,39,40,39,39,39,39,40,42,40,41,39,40,39,39,40,41,41,42,39,44,40,39,38,39,40,40,41,41,42,39,41,38,40,41,41,41,43,40,42,40,42,41,42,41,42,40,40,41,40,44,41,43,41,41,39,40,40,43,42,43,43,41,40,42,41,40,40,41,41,42,42,40,41,38,41,40,39,40,43,42,41,39,40,40,40,40,39,41,41,40,42,39,41,39,40,40,40,39,41,41,41,40,39,41,40,40,40,40,41,40,41,40,40,40,40,41,40,40,40,40,41,41,42,42,40,39,40,39,40,41,41,42,41,41,39,40,39,40,40,42,42,42,41,41,41,41,40,41,40,41,41,40,42,41,40,40,41,40,42,41,41,42,41,41,41,41,40,42,40,40,40,41,41,42,41,41,41,38,40,37,39,42,42,43,41,38,39,39,40,40,40,41,40,42,40,40,40,40,38,39,40,41,41,42,41,38,39,40,41,41,40,42,39,41,40,41,41,41,40,39,37,40,40,42,42,42,40,39,39,40,40,43,42,42,41,40,41,43,42,42,40,38,41,41,42,43,43,42,40,39,39,40,42,44,43,42,42,40,41,41,42,41,41,40,40,42,42,43,40,40,39,41,42,41,44,41,40,40,39,41,42,42,40,39,40,39,41,42,42,42,39,38,38,40,40,43,43,42,40,39,40,38,41,40,42,42,41,40,40,39,40,42,41,40,41,41,40}};
const double u[4] = {24, 18.45, 12.05, 6.02};
const int cnt[4] = {253, 320, 495, 599};

int main() {
    double best_a,best_b;
    double best_energy = std::numeric_limits<double>::max();

    for (double a=1; a>0; a-=.01) {
        for (double b=0; b<10; b+=.001) {
            double energy = 0;
            for (int m=0; m<4; m++) {
                double w2 = w[m][0];
                for (int i=1; i<cnt[0]-1; i++) {
                    energy += pow(w2-w[m][i], 2)/(u[m]*u[m]);
                    w2 = a*w2 + b*u[m];
                }
            }
            if (best_energy>energy) {
                best_a = a;
                best_b = b;
                best_energy = energy;
            }
        }
    }
    std::cerr << best_a << " " << best_b << std::endl;

    double w2[4] = {w[0][0],w[1][0],w[2][0],w[3][0]};
    for (int i=0; i<cnt[0]; i++) {
        std::cout << i*2 << " ";
        for (int m=0; m<4; m++) {
            std::cout << w[m][i]/2*10 << " " << w2[m]/2*10 << " ";
            w2[m] = w2[m]*best_a + best_b*u[m];
        }
        std::cout << std::endl;
    }

    return 0;
}


